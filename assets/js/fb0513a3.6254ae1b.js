"use strict";(self.webpackChunkapi_docs=self.webpackChunkapi_docs||[]).push([[7078],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76355:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:3,sidebar_hidden:!0},i="Create an Investor Passport",s={unversionedId:"in-progress/create-investor-passport",id:"in-progress/create-investor-passport",title:"Create an Investor Passport",description:"Investor Passports are used to collect compliance and tax information about an investor. Before an investment can be created, an Investor Passport has to be made and then associated with an investment.",source:"@site/docs/in-progress/create-investor-passport.md",sourceDirName:"in-progress",slug:"/in-progress/create-investor-passport",permalink:"/docs/in-progress/create-investor-passport",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_hidden:!0}},p={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create the Investor Passport",id:"step-1-create-the-investor-passport",level:2},{value:"Step 2: Upload Identifying Documentation",id:"step-2-upload-identifying-documentation",level:2},{value:"Step 3: Complete Tax Information",id:"step-3-complete-tax-information",level:2},{value:"Step 4: Trigger KYC/KYB",id:"step-4-trigger-kyckyb",level:2}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-an-investor-passport"},"Create an Investor Passport"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/investor-passport"},"Investor Passports")," are used to collect compliance and tax information about an investor. Before an investment can be created, an Investor Passport has to be made and then associated with an investment."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/tutorials/create-api-key"},"Create an API Key"))),(0,a.kt)("h2",{id:"step-1-create-the-investor-passport"},"Step 1: Create the Investor Passport"),(0,a.kt)("p",null,"Follow the ",(0,a.kt)("a",{parentName:"p",href:"/api/create-investor-passport"},"API Documentation")," to create a new Investor Passport. You are required to include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - The name of the investor."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," - Is the investor an ",(0,a.kt)("inlineCode",{parentName:"li"},"Individual")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Entity"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"country")," - The country the investor is from."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"accreditation_type")," - How the investor meets Regulation D accreditation.")),(0,a.kt)("p",null,"If the investor is an ",(0,a.kt)("inlineCode",{parentName:"p"},"Entity")," the following fields are also required:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"title")," - The title of the individual signing on behalf of an Entity."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"representative")," - The name of the individual signing on behalf of the Entity.")),(0,a.kt)("p",null,"If the investor is from the United States, then a ",(0,a.kt)("inlineCode",{parentName:"p"},"us_state")," field is also required."),(0,a.kt)("p",null,"Additionally, arbitrary ",(0,a.kt)("inlineCode",{parentName:"p"},"metadata")," can be provided and stored with the Investor Passport record. This is useful for storing additional data like identifiers from your own database."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import fetch from "node-fetch";\n\nconst createInvestorPassport = async () => {\n  const res = await fetch(\n    "https://api.allocations.app/api/v1/investor-passports",\n    {\n      method: "POST",\n      headers: {\n        Authorization: `BEARER ${YOUR_API_KEY}`,\n        "Content-Type": "application/json",\n      },\n      body: JSON.stringify({\n        name: "",\n      }),\n    }\n  );\n};\n')),(0,a.kt)("h2",{id:"step-2-upload-identifying-documentation"},"Step 2: Upload Identifying Documentation"),(0,a.kt)("h2",{id:"step-3-complete-tax-information"},"Step 3: Complete Tax Information"),(0,a.kt)("h2",{id:"step-4-trigger-kyckyb"},"Step 4: Trigger KYC/KYB"))}d.isMDXComponent=!0}}]);